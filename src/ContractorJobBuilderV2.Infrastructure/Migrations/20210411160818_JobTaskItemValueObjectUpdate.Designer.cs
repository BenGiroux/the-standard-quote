// <auto-generated />
using System;
using ContractorJobBuilderV2.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ContractorJobBuilderV2.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210411160818_JobTaskItemValueObjectUpdate")]
    partial class JobTaskItemValueObjectUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("ContractorJobBuilderV2.Core.Aggregates.JobTask", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("JobId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("JobTasks");
                });

            modelBuilder.Entity("ContractorJobBuilderV2.Core.Entities.Aggregates.Industry", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Industries");
                });

            modelBuilder.Entity("ContractorJobBuilderV2.Core.Entities.Aggregates.Job", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("IndustryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("ContractorJobBuilderV2.Core.Aggregates.JobTask", b =>
                {
                    b.HasOne("ContractorJobBuilderV2.Core.Entities.Aggregates.Job", null)
                        .WithMany("JobTasks")
                        .HasForeignKey("JobId");

                    b.OwnsMany("ContractorJobBuilderV2.Core.ValueObjects.JobTaskItem", "JobTaskItems", b1 =>
                        {
                            b1.Property<string>("Summary")
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("JobTaskId")
                                .HasColumnType("TEXT");

                            b1.HasKey("Summary");

                            b1.HasIndex("JobTaskId");

                            b1.ToTable("JobTaskItems");

                            b1.WithOwner()
                                .HasForeignKey("JobTaskId");
                        });

                    b.OwnsOne("ContractorJobBuilderV2.Core.ValueObjects.TitleAndDescription", "TitleAndDescription", b1 =>
                        {
                            b1.Property<Guid>("JobTaskId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Description")
                                .HasColumnType("TEXT")
                                .HasColumnName("Description");

                            b1.Property<string>("Title")
                                .HasColumnType("TEXT")
                                .HasColumnName("Title");

                            b1.HasKey("JobTaskId");

                            b1.ToTable("JobTasks");

                            b1.WithOwner()
                                .HasForeignKey("JobTaskId");
                        });

                    b.Navigation("JobTaskItems");

                    b.Navigation("TitleAndDescription");
                });

            modelBuilder.Entity("ContractorJobBuilderV2.Core.Entities.Aggregates.Industry", b =>
                {
                    b.OwnsOne("ContractorJobBuilderV2.Core.ValueObjects.TitleAndDescription", "TitleAndDescription", b1 =>
                        {
                            b1.Property<Guid>("IndustryId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Description")
                                .HasColumnType("TEXT")
                                .HasColumnName("Description");

                            b1.Property<string>("Title")
                                .HasColumnType("TEXT")
                                .HasColumnName("Title");

                            b1.HasKey("IndustryId");

                            b1.ToTable("Industries");

                            b1.WithOwner()
                                .HasForeignKey("IndustryId");
                        });

                    b.Navigation("TitleAndDescription");
                });

            modelBuilder.Entity("ContractorJobBuilderV2.Core.Entities.Aggregates.Job", b =>
                {
                    b.OwnsOne("ContractorJobBuilderV2.Core.ValueObjects.TitleAndDescription", "TitleAndDescription", b1 =>
                        {
                            b1.Property<Guid>("JobId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Description")
                                .HasColumnType("TEXT")
                                .HasColumnName("Description");

                            b1.Property<string>("Title")
                                .HasColumnType("TEXT")
                                .HasColumnName("Title");

                            b1.HasKey("JobId");

                            b1.ToTable("Jobs");

                            b1.WithOwner()
                                .HasForeignKey("JobId");
                        });

                    b.Navigation("TitleAndDescription");
                });

            modelBuilder.Entity("ContractorJobBuilderV2.Core.Entities.Aggregates.Job", b =>
                {
                    b.Navigation("JobTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
